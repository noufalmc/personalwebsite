name: Build, Push Docker, Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  build-push-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout repo
      - name: Checkout repo
        uses: actions/checkout@v3

      # 2. Configure AWS credentials
      - name: Configure AWS
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      # 3. Login to Amazon ECR
      - name: Login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      # 4. Build & Push Docker image
      - name: Build and Push Docker image
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
          IMAGE_TAG: latest
        run: |
          IMAGE_URI=$REGISTRY/$REPOSITORY:$IMAGE_TAG
          echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV
          docker build -t $IMAGE_URI .
          docker push $IMAGE_URI

      # 5. Deploy on EC2
      - name: Deploy Docker container on EC2
        uses: appleboy/ssh-action@v0.1.9
        with:
          host: 13.201.70.174
          username: ubuntu
          key:  ${{secrets.EC2_PRIVATE_KEY}}
          script: |
            IMAGE_URI=${{ env.IMAGE_URI }}
            aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin ${{ steps.login-ecr.outputs.registry }}
            docker pull $IMAGE_URI
            docker stop my-app-container || true
            docker rm my-app-container || true
            docker run -d -p 80:80 --name my-app-container $IMAGE_URI
